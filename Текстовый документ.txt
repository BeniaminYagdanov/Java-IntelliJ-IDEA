Метод Math.random - создаёт случайное число
конкантенация - соеденяет или просто +
Java - это строго типизированный язык. Это означает, что я не могу хранить данные не одного типа
Коллекции - позволяют создавать, что-то вроде массивов данных, но только с большим кол-вом функций и возможностей
Виды коллекций - все они отличаются скоростью и предостовляемыми возможностями
ArrayList <Integer> num = new ArrayList<>(); -  такие ковычки обязательны, обращаемся к главному типу данных (int = Integer), выделяем память с помощью new
num.add(43); - Функция add позволяет добавить значения в массив
По сути конструктор нужен для автоматической инициализации переменных.
В отличие от метода, конструктор никогда ничего не возвращает.

Конструктор определяет действия, выполняемые при создании объекта класса
class Box {
    int width; // ширина коробки
    int height; // высота коробки
    int depth; // глубина коробки
	
    // Конструктор
    Box() {
        width = 10;
        height = 10;
        depth = 10;
    }

    // вычисляем объём коробки
    int getVolume() {
    	return width * height * depth;
    }
}
Естественно, вы можете вернуть обратно метод setDim() (см. статью про классы) и установить свои размеры для коробки:


Box catBox = new Box();
// установим свои размеры для коробки
catBox.setDim(10, 20, 30);
mInfoTextView.setText("Объём коробки: " + catBox.getVolume());
Теперь вам должно быть ясно, что когда после ключевого слова new мы пишем имя класса со скобками, то на самом деле мы вызываем конструктор
 класса.
